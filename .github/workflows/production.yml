name: Production

on:
  push:
    tags:
      - v*

concurrency:
  group: production
  cancel-in-progress: true

jobs:
  ##############################################################################
  ## BUILD AND REGISTER BACKEND IMAGE
  ##############################################################################
  register-backend:
    name: Build & Register application
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@v1
      with:
        imageName: ${{ env.project }}/backend
        dockercontext: ./back-strapi
        dockerfile: ./back-strapi/Dockerfile
        project: ${{ env.project }}
        token: ${{ secrets.GITHUB_TOKEN }}

  ##############################################################################
  ## BUILD AND REGISTER FRONTEND IMAGE
  ##############################################################################
  register-frontend-guyane:
    name: Register frontend Guyane
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@v1
      with:
        imageName: ${{ env.project }}/frontend-guyane
        dockercontext: ./tumeplay-app
        dockerfile: ./tumeplay-app/Dockerfile
        project: ${{ env.project }}
        token: ${{ secrets.GITHUB_TOKEN }}
        dockerbuildargs: |
          buildenv=preprod.guyane
          REACT_APP_API_URL=%%REACT_APP_API_URL%%
          REACT_APP_ZONE=%%REACT_APP_ZONE%%
          REACT_APP_OTHER_ZONE_URL=%%REACT_APP_OTHER_ZONE_URL%%
          REACT_APP_MATOMO_ID=%%REACT_APP_MATOMO_ID%%

  ##############################################################################
  ## BUILD AND REGISTER FRONTEND GUYANE
  ##############################################################################
  register-frontend-metropole:
    name: Register frontend Metropole
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@v1
      with:
        imageName: ${{ env.project }}/frontend-metropole
        dockercontext: ./tumeplay-app
        dockerfile: ./tumeplay-app/Dockerfile
        project: ${{ env.project }}
        token: ${{ secrets.GITHUB_TOKEN }}
        dockerbuildargs: |
          buildenv=preprod.metropole
          REACT_APP_API_URL=%%REACT_APP_API_URL%%
          REACT_APP_ZONE=%%REACT_APP_ZONE%%
          REACT_APP_OTHER_ZONE_URL=%%REACT_APP_OTHER_ZONE_URL%%
          REACT_APP_MATOMO_ID=%%REACT_APP_MATOMO_ID%%

  ##############################################################################
  ## BUILD AND REGISTER DASHBOARD
  ##############################################################################
  register-dashboard:
    name: Register dashboard
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@v1
      with:
        imageName: ${{ env.project }}/dashboard
        dockercontext: ./tumeplay-dashboard
        dockerfile: ./tumeplay-dashboard/Dockerfile
        project: ${{ env.project }}
        token: ${{ secrets.GITHUB_TOKEN }}
        dockerbuildargs: |
          REACT_APP_API_URL=%%REACT_APP_API_URL%%

  ##############################################################################
  ## GENERATE PREPROD KUBERNETES MANIFESTS
  ##############################################################################
  manifests-preproduction:
    name: Preproduction manifests
    runs-on: ubuntu-latest
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/k8s-manifests@v1
      with:
        environment: "preprod"

  ##############################################################################
  ## DEPLOY BACKEND & FRONT-END TO PREPRODUCTION
  ##############################################################################
  deploy-preproduction:
    name: Deploy preproduction
    runs-on: ubuntu-latest
    needs:
      [
        register-backend,
        register-dashboard,
        register-frontend-guyane,
        register-frontend-metropole,
        manifests-preproduction,
      ]
    environment:
      name: preproduction
      url: https://backend-${{ env.namespace }}.${{ env.SOCIALGOUV_BASE_DOMAIN }}
    steps:

    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@v1
      with:
        environment: "preprod"
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV2 }}

  ##############################################################################
  ## GENERATE PROD KUBERNETES MANIFESTS
  ##############################################################################
  manifests-production:
    name: Production manifests
    runs-on: ubuntu-latest
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/k8s-manifests@v1
      with:
        environment: "prod"

  ##############################################################################
  ## DEPLOY BACKEND & FRONT-END TO PRODUCTION
  ##############################################################################
  deploy-production:
    name: Deploy production
    runs-on: ubuntu-latest
    needs: [deploy-preproduction, manifests-production]
    environment:
      name: production
      url: https://backend-${{ env.namespace }}.${{ env.SOCIALGOUV_BASE_DOMAIN }}
    steps:

    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@v1
      with:
        environment: "prod"
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_PROD }}
